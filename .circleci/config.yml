workflows:
  version: 2
  build:
    jobs:
      - build_ubuntu
      - build_arch

version: 2
jobs:
  build_ubuntu:
    docker:
      - image: buildpack-deps:19.10
    steps:
      - run:
          name: Install pre deps
          command: |
            apt-get update -yqq \
            && apt-get install -yqq \
            build-essential \
            cmake \
            gcc \
            g++ \
            qt5-default \
            qt5-qmake \
            qtmultimedia5-dev \
            libqt5svg5-dev \
            libx11-dev \
            libavformat-dev \
            libavcodec-dev \
            libavutil-dev \
            libswscale-dev \
            libqt5x11extras5-dev \
            libxcb-util-dev \
            libxcb-cursor-dev \
            libxcb1-dev \
      - run:
          name: QMake Version
          command: qmake --version
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run:
          name: LS
          command: ls -lahR ~/project
      - run:
          name: Create Build Env
          command: mkdir build && pwd && ls
      - run:
          name: Build
          command: |
            cd build && pwd && ls;
            qmake ..;
            make -j2;
            cd ..;
      - run:
          name: Create Artifact Path
          command: mkdir /kshare
      - run:
          name: Store Build
          command: cp build/src/kshare /kshare/
      - run:
          name: Build Debian Package
          command: |
            cd packages/;
            ./makedeb.sh ci;
            cp *.deb /kshare/
      - store_artifacts:
          path: /kshare/
  build_arch:
    docker:
      - image: archlinux/base:latest
    steps:
      - run:
          name: Install pre deps
          command: |
            pacman -Sy \
            && pacman -S --noconfirm \
            base-devel \
            git \
            sudo \
            wget \
      - run:
          name: disable_coredump
          command: echo "Set disable_coredump false" >> /etc/sudo.conf
      - run:
          name: create build user
          command: |
            mkdir /home/build \
            && useradd --home /home/build --shell=/bin/false build && usermod -L build \
            && chown build:build /home/build \
            && echo "build ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers \
            && echo "root ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers \
      - run:
          name: wget PKGBUILD
          command: cd /home/build &&sudo -u build wget https://raw.githubusercontent.com/Gurkengewuerz/KShare/${CIRCLE_BRANCH}/packages/arch/${CIRCLE_BRANCH}-KShare/PKGBUILD
      - run:
          name: Where am I?
          command: cd /home/build && pwd && ls -lah
      - run:
          name: Make arch package and install dependencies
          command: cd /home/build && sudo -u build makepkg --syncdeps --noconfirm
      - run:
          name: Create Artifact Path
          command: mkdir /kshare
      - run:
          name: Store Build
          command: cp /home/build/*.pkg.tar.xz /kshare/
      - store_artifacts:
          path: /kshare/
